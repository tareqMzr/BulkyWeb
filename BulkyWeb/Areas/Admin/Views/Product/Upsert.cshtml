@model ProductVM

<div class="card shadow border-0 mt4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center text-white">
                <h1>@(Model.Product.Product_id!=0?"Update":"Create") Product</h1>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        <form method="post" class="row" enctype="multipart/form-data">
            <div class="row">
                <div class="col-10">
                    <div class="border-0  p-3 ">
                        <input asp-for="Product.Product_id" hidden />
                        @*<input asp-for="Product.ImageUrl" hidden />*@
                        <div class="form-floating py-2 col-12">
                            <input asp-for="Product.Title" class="form-control" />
                            <label asp-for="Product.Title"></label>
                            <span asp-validation-for="Product.Title" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="Product.Author" class="form-control" />
                            <label asp-for="Product.Author"></label>
                            <span asp-validation-for="Product.Author" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="Product.ISBN" class="form-control" />
                            <label asp-for="Product.ISBN"></label>
                            <span asp-validation-for="Product.ISBN" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <textarea asp-for="Product.Description" class="form-control"></textarea>
                            <label asp-for="Product.Description"></label>
                            <span asp-validation-for="Product.Description" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="Product.ListPrice" class="form-control" />
                            <label asp-for="Product.ListPrice"></label>
                            <span asp-validation-for="Product.ListPrice" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="Product.Price" class="form-control" />
                            <label asp-for="Product.Price"></label>
                            <span asp-validation-for="Product.Price" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="Product.Price50" class="form-control" />
                            <label asp-for="Product.Price50"></label>
                            <span asp-validation-for="Product.Price50" class="text-danger"></span>
                        </div>

                        <div class="form-floating py-2 col-12">
                            <input asp-for="Product.Price100" class="form-control" />
                            <label asp-for="Product.Price100"></label>
                            <span asp-validation-for="Product.Price100" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input type="file" name="files" class="form-control" multiple/>
                            <label asp-for="Product.ProductImages"></label>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <select asp-for="Product.CategoryID" asp-items="@Model.CategoryList" class="form-control">
                                <option>--Select Category--</option>
                            </select>
                            <label asp-for="Product.CategoryID"></label>
                            <span asp-validation-for="Product.CategoryID" class="text-danger"></span>
                        </div>
                        <div class="row pt-4">
                            <div class="col-6 col-md-3">
                                @if (Model.Product.Product_id == 0)
                                {
                                    <button type="submit" class="btn btn-primary form-control">Create</button>
                                }
                                else
                                {
                                    <button type="submit" class="btn btn-primary form-control">Edit</button>
                                }

                            </div>
                            <div class="col-6 col-md-3">
                                <a asp-action="Index" asp-controller="Product" class=" border btn btn-secondary form-control">Go to List</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-2">
                    @if (Model.Product.ProductImages != null)
                    {
                        foreach (var image in Model.Product.ProductImages)
                        {
                            <div class="border p-1 text-center">
                                <img src="@image.ImageUrl" width="100%" style="border-radius:5px;border:1px solid white"/>
                                <a asp-action="DeleteImage" class="btn btn-danger" asp-route-imageId="@image.id">
                                    <i class="bi bi-trash-fill"></i>Delete
                                </a>
                            </div>
                        }
                    }
                    @* <img src="@Model.Product.ImageUrl" width="100%" style="border-radius:5px;border:1px solid white" /> *@
                </div>
            </div>
            
        </form>
        <br/>
    </div>
</div>
<br />
<br />
<br/>
<br />


@section Scripts {
    <script>
        tinymce.init({
          selector: 'textarea',
          plugins: 'anchor  charmap codesample emoticons   lists   table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed linkchecker a11ychecker tinymcespellchecker permanentpen powerpaste advtable advcode editimage advtemplate ai mentions tinycomments tableofcontents footnotes mergetags autocorrect typography inlinecss markdown',
          toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough  | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap',
          tinycomments_mode: 'embedded',
          tinycomments_author: 'Author name',
          mergetags_list: [
            { value: 'First.Name', title: 'First Name' },
            { value: 'Email', title: 'Email' },
          ],
          ai_request: (request, respondWith) => respondWith.string(() => Promise.reject("See docs to implement AI Assistant")),
        });
    </script>
    @{
        <partial name="_ValidationScriptsPartial" />
    }
}